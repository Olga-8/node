# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Nodejs.gitlab-ci.yml

# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
image: node:latest

stages:
  - lint
  - audit
  - test
  - build
  - deploy

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: https://docs.gitlab.com/ee/ci/services/index.html
services:
  - mysql:latest
  - redis:latest
  - postgres:latest
  -  mongo:latest

# This folder is cached between builds
# https://docs.gitlab.com/ee/ci/yaml/index.html#cache
cache:
  paths:
    - node_modules/

lint:
  stage: lint
  script:
    - npm install
    - npm run lint

audit:
  stage: audit
  script:
    - npm install
    - npm audit

test:
  stage: test
  script:
    - echo "Testing the app"
    - npm install
    - npm run test

test_async:
  script:
    - npm install
    - node ./specs/start.js ./specs/async.spec.js

test_db:
  script:
    - npm install
    - node ./specs/start.js ./specs/db-postgres.spec.js

build:
  stage: build
  script:
    - echo "Building the app"
    - npm install
    - npm run build
    - docker build -t olga8/my_app:$CI_COMMIT_REF_NAME .
    - docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
    - docker push olga8/my_app:$CI_COMMIT_REF_NAME

deploy:
  stage: deploy
  script:
  - echo "Define your deployment script!"
  - docker pull olga8/my_app:$CI_COMMIT_REF_NAME
  environment: production
